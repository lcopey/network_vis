{
  "src/lib/components/NetworkVis.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "NetworkVis",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "nodes": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": ""
      },
      "edges": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": ""
      },
      "labelPosition": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{ x: 0, y: 0 }",
          "computed": false
        }
      },
      "labelVisible": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "labelText": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "selectedNodeId": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      },
      "selectedEdgeId": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}